{
  "debug": {
    "outputPath": "./debug"
  },
  "logger": {
    "prettyPrint": true
  },
  "elasticsearch": {
    "defaultIndex": "*",
    "indices": [
      {
        "name": "xyz_users",
        "docSetRef": "firestore.docSets.users",
        "indexMapping": "./elasticsearch/indexMappings/user.json",
        "search": {
          "sourceFields": ["fullName", "userid", "background"],
          "title": "User: '${_source.fullName}' (${_id})",
          "verboseDetails": "Userid: ${_source.userid}\n${_source.background}"
        }    
      },
      {
        "name": "xyz_posts",
        "docSetRef": "firestore.docSets.posts",
        "indexMapping": "./elasticsearch/indexMappings/post.json",
        "search": {
          "title": "Title: '${_source.title}' (${_id})",
          "verboseDetails": "Likes: ${_source.likes}\n${_source.article}"
        }
      },
      {
        "name": "xyz_user_posts",
        "docSetRef": "firestore.docSets.userPosts",
        "indexMapping": "./elasticsearch/indexMappings/post.json",
        "search": {
          "title": "Title: '${_source.title}' (${_id})",
          "verboseDetails": "Likes: ${_source.likes}\n${_source.article}"
        }
      }
    ]
  },
  "firestore": {
    "backupBasePath": "./backups",

    // "docSets" are shorthand references to sets of documents in firestore
    "docSets": {
      "all": {
        "path": null,
        "recursive": true
      },
      "posts": {
        "path": "xyzposts",
        "shallow": true
      },
      "userPosts": {
        "path": "xyzusers",
        "collectionId": "posts",
        "recursive": true
      },
      "users": {
        "path": "xyzusers",
        "shallow": true
      }
    },
    // "types" are used to map firestore reference id's / paths to types using regular expressions.
    // Will look for matching type in "schemas" config entry.
    "types": [
      { "path": "^xyzposts\/[^/]+$", "type": "post" },
      { "path": "^xyzusers\/[^/]+\/posts\/[^/]+$", "type": "post" },
      { "path": "^xyzusers\/[^/]+$", "type": "user" }
    ]
  },
  "schemas": {
    "post": {
      "schemaId": "http://cloudlixyz.com/schemas/post.schema.json",
      // "schemaFiles" must include the main schema file and any referenced schemas for the type
      "schemaFiles": [
        "./schemas/post.schema.json"
      ]
    },
    "user": {
      "schemaId": "http://cloudlixyz.com/schemas/user.schema.json",
      "schemaFiles": [
        "./schemas/user.schema.json"
      ]
    }
  }  
}